/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSTM32F4XX_HAL_ADC_H
#define _MOCKSTM32F4XX_HAL_ADC_H

#include "unity.h"
#include "stm32f4xx_hal.h"
#include "stm32f4xx_hal_adc.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockstm32f4xx_hal_adc_Init(void);
void Mockstm32f4xx_hal_adc_Destroy(void);
void Mockstm32f4xx_hal_adc_Verify(void);




#define HAL_ADC_Init_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_Init_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_DeInit_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_DeInit_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_DeInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_MspInit_Expect(hadc) HAL_ADC_MspInit_CMockExpect(__LINE__, hadc)
void HAL_ADC_MspInit_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_MspDeInit_Expect(hadc) HAL_ADC_MspDeInit_CMockExpect(__LINE__, hadc)
void HAL_ADC_MspDeInit_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_Start_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_Start_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_Start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_Stop_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_Stop_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_Stop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_PollForConversion_ExpectAndReturn(hadc, Timeout, cmock_retval) HAL_ADC_PollForConversion_CMockExpectAndReturn(__LINE__, hadc, Timeout, cmock_retval)
void HAL_ADC_PollForConversion_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, uint32_t Timeout, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_PollForEvent_ExpectAndReturn(hadc, EventType, Timeout, cmock_retval) HAL_ADC_PollForEvent_CMockExpectAndReturn(__LINE__, hadc, EventType, Timeout, cmock_retval)
void HAL_ADC_PollForEvent_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeout, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_Start_IT_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_Start_IT_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_Start_IT_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_Stop_IT_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_Stop_IT_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_Stop_IT_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_IRQHandler_Expect(hadc) HAL_ADC_IRQHandler_CMockExpect(__LINE__, hadc)
void HAL_ADC_IRQHandler_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_Start_DMA_ExpectAndReturn(hadc, pData, Length, cmock_retval) HAL_ADC_Start_DMA_CMockExpectAndReturn(__LINE__, hadc, pData, Length, cmock_retval)
void HAL_ADC_Start_DMA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_Stop_DMA_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_Stop_DMA_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_Stop_DMA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_GetValue_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_GetValue_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_GetValue_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, uint32_t cmock_to_return);
#define HAL_ADC_ConvCpltCallback_Expect(hadc) HAL_ADC_ConvCpltCallback_CMockExpect(__LINE__, hadc)
void HAL_ADC_ConvCpltCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_ConvHalfCpltCallback_Expect(hadc) HAL_ADC_ConvHalfCpltCallback_CMockExpect(__LINE__, hadc)
void HAL_ADC_ConvHalfCpltCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_LevelOutOfWindowCallback_Expect(hadc) HAL_ADC_LevelOutOfWindowCallback_CMockExpect(__LINE__, hadc)
void HAL_ADC_LevelOutOfWindowCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_ErrorCallback_Expect(hadc) HAL_ADC_ErrorCallback_CMockExpect(__LINE__, hadc)
void HAL_ADC_ErrorCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc);
#define HAL_ADC_ConfigChannel_ExpectAndReturn(hadc, sConfig, cmock_retval) HAL_ADC_ConfigChannel_CMockExpectAndReturn(__LINE__, hadc, sConfig, cmock_retval)
void HAL_ADC_ConfigChannel_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_AnalogWDGConfig_ExpectAndReturn(hadc, AnalogWDGConfig, cmock_retval) HAL_ADC_AnalogWDGConfig_CMockExpectAndReturn(__LINE__, hadc, AnalogWDGConfig, cmock_retval)
void HAL_ADC_AnalogWDGConfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* AnalogWDGConfig, HAL_StatusTypeDef cmock_to_return);
#define HAL_ADC_GetState_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_GetState_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_GetState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, uint32_t cmock_to_return);
#define HAL_ADC_GetError_ExpectAndReturn(hadc, cmock_retval) HAL_ADC_GetError_CMockExpectAndReturn(__LINE__, hadc, cmock_retval)
void HAL_ADC_GetError_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ADC_HandleTypeDef* hadc, uint32_t cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
